#ifndef SYNTAX_TYPES_H
#define SYNTAX_TYPES_H

typedef enum {
	STX_SCOPE, STX_CLASS, STX_FNDEF, STX_IF, STX_WHILE,
	STX_FOR, STX_FORRANGE, STX_SWITCH, STX_CASE,

	STX_INIT, STX_DECLARE, STX_ASSIGN, STX_ECHO, STX_BREAK,
	STX_RETURN, STX_EXIT,

	STX_GEXPR, STX_EXPR,

	STX_VTYPE, STX_VAR, STX_MEMBER, STX_THIS,STX_INDEX, STX_FNCALL,
	STX_NUM, STX_STRLIT, STX_NIL,

	STX_ARITHOP, STX_BOOLOP, STX_ASSIGNOP,

	STX_MULT, STX_DIV, STX_SUM, STX_DIFF, STX_MOD,

	STX_TRUE, STX_FALSE, STX_AND, STX_OR, STX_NOT, STX_GREATER,
	STX_LESS, STX_EQUAL_EQUAL, STX_NOT_EQUAL, STX_GREATER_EQUAL, STX_LESS_EQUAL,

	STX_RARROW,

	STX_EQUAL, STX_PLUS_EQUAL, STX_MINUS_EQUAL, STX_STAR_EQUAL, STX_DIV_EQUAL,
	STX_MOD_EQUAL,

	STX_INCREMENT, STX_DECREMENT, STX_NEGATE,

	STX_ERR, STX_UNSPECIFIED,
} SYNTAX_TYPE;

/*
char *syntaxTypeLiteralLookup(SYNTAX_TYPE type) {
	return __syntaxTypeLiterals[type];
}
*/
#endif // SYNTAX_TYPES_H