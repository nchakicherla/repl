  
  BLCK_TYPE_SCOPE = BLCK_TYPE_CLASS | BLCK_TYPE_FNDEF | BLCK_TYPE_IF | BLCK_TYPE_WHILE | BLCK_TYPE_FOR | STMT_TYPE_DECLARE | STMT_TYPE_ASSIGN | STMT_TYPE_INIT | STMT_TYPE_ECHO | STMT_TYPE_BREAK | 
  			STMT_TYPE_RETURN | STMT_TYPE_EXIT, { BLCK_TYPE_CLASS | BLCK_TYPE_FNDEF | BLCK_TYPE_IF | BLCK_TYPE_WHILE | BLCK_TYPE_FOR | STMT_TYPE_DECLARE | STMT_TYPE_ASSIGN | STMT_TYPE_INIT | STMT_TYPE_ECHO | STMT_TYPE_BREAK | 
  			STMT_TYPE_RETURN | STMT_TYPE_EXIT }

  BLCK_TYPE_CLASS = TK_CLASS, TK_IDENTIFIER, TK_LBRACE, BLCK_TYPE_SCOPE, TK_RBRACE, TK_SEMICOLON
  BLCK_TYPE_FNDEF = TK_FN, TK_IDENTIFIER, TK_LPAREN, TK_BOOL | TK_FLT | TK_INT | TK_STR | TK_IDENTIFIER, TK_IDENTIFIER, TK_SEMICOLON
  BLCK_TYPE_IF = TK_IF, TK_LPAREN, EXPR_TYPE_BOOL, TK_RPAREN, TK_LBRACE, BLCK_TYPE_SCOPE, TK_RBRACE, TK_SEMICOLON
  BLCK_TYPE_WHILE = TK_WHILE, TK_LPAREN, EXPR_TYPE_BOOL, TK_RPAREN, TK_LBRACE, BLCK_TYPE_SCOPE, TK_RBRACE, TK_SEMICOLON

  BLCK_TYPE_FOR = TK_FOR, TK_LPAREN, TK_IDENTIFIER, TK_EQUALS, EXPR_TYPE_EVAL | TERM_TYPE_VAR | TERM_TYPE_FNCALL | TERM_TYPE_INDEX | TERM_TYPE_PROP | TERM_TYPE_FACTOR, TK_SEMICOLON, 
  							EXPR_TYPE_BOOL, TK_SEMICOLON, 
  							OPER_TYPE_INCREMENT | OPER_TYPE_DECREMENT, TK_RPAREN,

  							TK_LBRACE, BLCK_TYPE_SCOPE, TK_RBRACE, TK_SEMICOLON

  STMT_TYPE_DECLARE = TK_BOOL | TK_FLT | TK_INT | TK_STR, TK_IDENTIFIER, TK_SEMICOLON
  STMT_TYPE_ASSIGN = LVAL_TYPE_VAR | LVAL_TYPE_PROP, TK_EQUAL, EXPR_TYPE_EVAL, TK_SEMICOLON
  STMT_TYPE_INIT = TK_BOOL | TK_FLT | TK_INT | TK_STR | TK_IDENTIFIER, TK_IDENTIFIER, TK_EQUAL, EXPR_TYPE_EVAL, TK_SEMICOLON
  STMT_TYPE_ECHO = EXPR_TYPE_GROUP | EXPR_TYPE_EVAL, TK_SEMICOLON
  STMT_TYPE_BREAK = TK_BREAK, TK_SEMICOLON
  STMT_TYPE_RETURN = TK_RETURN, { EXPR_TYPE_EVAL }, TK_SEMICOLON
  STMT_TYPE_EXIT = TK_EXIT, TK_LPAREN, EXPR_TYPE_EVAL, TK_RPAREN, TK_SEMICOLON
  EXPR_TYPE_GROUP = TK_LPAREN, EXPR_TYPE_EVAL | EXPR_TYPE_GROUP, TK_RPAREN
  EXPR_TYPE_EVAL = 	EXPR_TYPE_GROUP | TERM_TYPE_VAR | TERM_TYPE_FNCALL | TERM_TYPE_PROP | TERM_TYPE_FACTOR | TERM_TYPE_STRING,
  					OPER_TYPE_MULT | OPER_TYPE_DIV | OPER_TYPE_SUM | OPER_TYPE_DIFF | OPER_TYPE_MODULUS,
  					EXPR_TYPE_GROUP | EXPR_TYPE_EVAL | TERM_TYPE_VAR | TERM_TYPE_FNCALL | TERM_TYPE_PROP | TERM_TYPE_FACTOR | TERM_TYPE_STRING

  EXPR_TYPE_BOOL = EXPR_TYPE_EVAL, TK_BANG_EQUAL | TK_EQUAL_EQUAL | TK_GREATER_EQUAL | TK_LESS_EQUAL, EXPR_TYPE_EVAL
  TERM_TYPE_VAR = TK_IDENTIFIER
  TERM_TYPE_FNCALL = TK_IDENTIFIER, TK_LPAREN, {EXPR_TYPE_EVAL, {(TK_COMMA, EXPR_TYPE_EVAL)}}, TK_RPAREN, TK_LBRACE, BLCK_TYPE_SCOPE, TK_RBRACE, TK_SEMICOLON
  TERM_TYPE_INDEX = TK_IDENTIFIER, TK_LSQUARE, EXPR_TYPE_EVAL, TK_RSQUARE
  TERM_TYPE_PROP = TK_IDENTIFIER, {(TK_DOT, TK_IDENTIFIER)}
  TERM_TYPE_FACTOR = TK_NUM
  TERM_TYPE_STRING = TK_STRING
  LVAL_TYPE_VAR = TK_IDENTIFIER
  LVAL_TYPE_PROP = TK_IDENTIFIER, TK_DOT, TK_IDENTIFIER, {(TK_DOT, TK_IDENTIFIER)}
  OPER_TYPE_MULT = TK_STAR
  OPER_TYPE_DIV = TK_DIV
  OPER_TYPE_SUM = TK_SUM
  OPER_TYPE_DIFF = TK_MINUS
  OPER_TYPE_MODULUS = TK_MOD
  OPER_TYPE_AND = TK_AND
  OPER_TYPE_OR = TK_OR
  OPER_TYPE_NOT = TK_BANG
  OPER_TYPE_EQUALS = TK_EQUAL
  OPER_TYPE_EQEQUALS = TK_EQUAL_EQUAL
  OPER_TYPE_PLUSEQUALS = TK_PLUS, TK_EQUAL
  OPER_TYPE_MINUSEQUALS = TK_MINUS, TK_EQUAL
  OPER_TYPE_TIMESEQUALS = TK_STAR, TK_EQUAL
  OPER_TYPE_DIVEQUALS = TK_FSLASH, TK_EQUAL
  OPER_TYPE_MODEQUALS = TK_MOD, TK_EQUAL
  OPER_TYPE_INCREMENT = TERM_TYPE_VAR | TERM_TYPE_PROP, TK_PLUS, TK_PLUS
  OPER_TYPE_DECREMENT = TERM_TYPE_VAR | TERM_TYPE_PROP, TK_MINUS, TK_MINUS
